// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonalClassroom.Database;

namespace PersonalClassroom.Database.Migrations
{
    [DbContext(typeof(PcContext))]
    partial class PcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<decimal>("LeftToPay")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Symbol")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Niveau introductif ou de découverte",
                            Name = "Utilisateur élémentaire",
                            Symbol = "A1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Niveau intermédiaire ou usuel",
                            Name = "Utilisateur élémentaire",
                            Symbol = "A2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Niveau seuil",
                            Name = "Utilisateur indépendant",
                            Symbol = "B1"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Niveau avancé ou indépendant",
                            Name = "Utilisateur indépendant",
                            Symbol = "B2"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Niveau autonome",
                            Name = "Utilisateur expérimenté",
                            Symbol = "C1"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Niveau maîtrise",
                            Name = "Utilisateur expérimenté ",
                            Symbol = "C2"
                        });
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("LeftToUse")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<int?>("LevelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.StudentPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.HasKey("PaymentId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentPayments");
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Class", b =>
                {
                    b.HasOne("PersonalClassroom.Database.Entities.Student", "Student")
                        .WithMany("Classes")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.Student", b =>
                {
                    b.HasOne("PersonalClassroom.Database.Entities.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("PersonalClassroom.Database.Entities.StudentPayment", b =>
                {
                    b.HasOne("PersonalClassroom.Database.Entities.Payment", "Payment")
                        .WithMany("StudentPayments")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalClassroom.Database.Entities.Student", "Student")
                        .WithMany("StudentPayments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
